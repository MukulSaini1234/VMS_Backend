1. Addition of 3 methods in PurchaseOrder.class

 		public static String getNextGRNno(Connection con,String cmpCd, String prefix){
        String nextGrnNo="";
        String sql="SELECT max(grn_no) prev_grn_no FROM grn_mst WHERE cmp_cd=? AND grn_no LIKE ?";
        try(PreparedStatement ps=con.prepareStatement(sql)){
            ps.setString(1, cmpCd);
            ps.setString(2, prefix+"%");
            String prevNo="";
            try(ResultSet rs=ps.executeQuery()){                
                if(rs.next()){
                   prevNo=rs.getString("prev_grn_no");
                }
                if(prevNo==null){
                    prevNo=prefix+"0000";
                }
            }
            String numPart=prevNo.substring(prefix.length());
            int num=Integer.parseInt(numPart);
            nextGrnNo=prefix+String.format("%04d", num+1);
        }catch (SQLException ex) {
            logger.error(ex);
        }
        return nextGrnNo;
    } 
    
    public static String insertGRN(Connection con, String cmpCd, String uLoginId, String offCd, ArrayList hmData, String insFr) {
        logger.info("hmData: insert grn " + hmData.toString());
        String insStat = "Failed";
        String insGRN = "INSERT INTO GRN_MST(CMP_CD,ULOGIN_ID,OFF_CD,GRN_NO,GRN_DATE,INV_NO,PO_NO,RECD_GODOWN,ENT_FR) values(?,?,?,?,?,?,?,?,?) ";
        String insGRNDtls = "INSERT INTO GRN_DTLS(CMP_CD,ULOGIN_ID,OFF_CD,GRN_ID,PR_ID,QTY_RECV) values(?,?,?,?,?,?)";

        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
        SimpleDateFormat sdf_f = new SimpleDateFormat("dd-MMMM-yyyy");
        
        try (PreparedStatement ps = con.prepareStatement(insGRN)) {
            ps.setString(1, cmpCd);
            ps.setString(2, uLoginId);
            ps.setString(3, offCd);

            HashMap ald = (HashMap) hmData.get(0);

            logger.info("ald: " + ald.get("RecdDate"));
            String grnNo = null;
            try {
                Date recdDate=sdf_f.parse((String) ald.get("RecdDate"));
                String grnPrefix="G"+sdf.format(recdDate);
                grnNo=getNextGRNno(con, cmpCd, grnPrefix);
            } catch (ParseException ex) {
                logger.error(ex);
            }

            if (grnNo != null) {
                logger.info("grnNo :" + grnNo);
                ps.setString(4, grnNo);
                ps.setString(5, (String) ald.get("RecdDate"));
                ps.setString(6, (String) ald.get("InvNo"));
                ps.setString(7, (String) ald.get("poNo"));
                ps.setString(8, (String) ald.get("Godown"));

                ps.setString(9, insFr);

                if (ps.executeUpdate() > 0) {
                    int grnId = 0;
                    String identQuery = "";
                    switch (con.getMetaData().getDatabaseProductName()) {
                        case JDBCAdapter.DATABASE_MSSQL:
                            identQuery = "SELECT IDENT_CURRENT('GRN_MST') AS GRN_ID";
                            break;
//
                        case JDBCAdapter.DATABASE_MySQL:
                            identQuery = "SELECT LAST_INSERT_ID() As GRN_ID";
//
                    }
                    try (Statement stmt = con.createStatement()) {
                        ResultSet rs = stmt.executeQuery(identQuery);
                        if (rs.next()) {
                            grnId = Integer.parseInt(rs.getString("GRN_ID"));
                        }
                    }
                    logger.info("grn Id: " + grnId);
                    if (grnId > 0) {
                        int iSaved = 0;
                        ArrayList alDtls = (ArrayList) hmData;
                        try (PreparedStatement ps2 = con.prepareStatement(insGRNDtls)) {
                            for (Object alDtl : alDtls) {
                                HashMap hmItem = (HashMap) alDtl;
                                logger.info("hmItem: " + hmItem);
                                int ProdQty = (int) hmItem.get("ProdQty");
                                ps2.setString(1, cmpCd);
                                ps2.setString(2, uLoginId);
                                ps2.setString(3, offCd);
                                ps2.setInt(4, grnId);
                                ps2.setString(5, (String) hmItem.get("ProdId"));
                                ps2.setInt(6, ProdQty);
                                if (ps2.executeUpdate() > 0) {
                                    iSaved++;
                                    logger.info("iSaved :" + iSaved);
                                }

                            }
                        }
                        logger.info("iSaved: " + iSaved);
                        if (iSaved == alDtls.size()) {
                            insStat = "Inserted";
                           
                        } 

                    }

                }
            }
        }
        catch (SQLException ex) {
            logger.error(ex);
        }

        return insStat;
    }
    
     public static ArrayList getGRNInfo(String cmpCd,String offCd,String fromDt, String toDt,String product, String godown,String entryType) {
        
        ArrayList grnData = new ArrayList();
        StringBuilder sb = new StringBuilder();
        String strFromDate = "";
        String strToDate = "";
         SimpleDateFormat sdf = new SimpleDateFormat("dd-MMMM-yyyy");
                    SimpleDateFormat sdf_db = new SimpleDateFormat("yyyy-MM-dd");
                    try{
                        strFromDate=sdf_db.format(sdf.parse(fromDt));
                        strToDate=sdf_db.format(sdf.parse(toDt));
                    }catch (Exception ex) {
                        logger.info(ex);
                    }
        sb.append("select g.grn_id,g.grn_no,g.po_no,g.grn_date,g.inv_no,g.recd_godown,g.ent_fr,pm.product,gd.QTY_RECV,om.off_name ")
           .append("from grn_mst g left join GRN_DTLS gd on g.CMP_CD=gd.CMP_CD and g.GRN_ID=gd.grn_id ")
           .append("left  join PRODUCTS_MST pm ")
           .append("on g.CMP_CD=pm.CMP_CD and gd.PR_ID=pm.ID ")
           .append("left join OFF_MST om on g.CMP_CD=om.CMP_CD and g.recd_godown=om.OFF_CD where g.CMP_CD = ? ");
        
        if(fromDt!=null && toDt!=null){
            sb.append(" AND g.grn_date BETWEEN '").append(strFromDate).append("' and '").append(strToDate).append("'");
        }
        if(!product.equalsIgnoreCase("ALL")){
            sb.append(" AND pm.id = '").append(product).append("'");
        }
        if(!godown.equalsIgnoreCase("ALL")){
            sb.append(" AND om.off_cd = '").append(godown).append("'");
        }
        if(!entryType.equalsIgnoreCase("ALL")){
            sb.append(" AND g.ent_fr = '").append(entryType).append("'");
        }
        sb.append(" order by g.grn_no");


        logger.info("query "+sb.toString());
        try (Connection con = JDBCAdapter.getConnection(cmpCd); PreparedStatement ps = con.prepareStatement(sb.toString())) {
            ps.setString(1, cmpCd);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                  ArrayList ald = new ArrayList();
                  ald.add(rs.getString("grn_id"));
                  ald.add(rs.getString("grn_no"));
                  ald.add(rs.getString("ulogin_id"));
                  ald.add(rs.getString("po_no"));
                  ald.add(sdf.format(rs.getDate("grn_date")));
                  ald.add(rs.getString("inv_no"));
                  ald.add(rs.getString("off_name"));
                  ald.add(rs.getString("ent_fr"));
                  ald.add(rs.getString("product"));
                  ald.add(rs.getString("qty_recv"));
                  ald.add(rs.getString("off_name"));
                  grnData.add(ald);
        
            }
        } catch (SQLException ex) {
            logger.error(ex);
        }
        
        return grnData;
        }
		
2. Adding following line in CrmAsyncProcesssor.java in case: ins_stock , to fetch poNO before line 'alData.add(hmDealDtls);'
 hmDealDtls.put("poNo",request.getParameter("s_pono"));	

3. Addition in method : insProdStock in file PurchaseOrder.java
   Adding following lines before the final commit of the method and commenting 'con.commit'
   
    
	if (iUpd == alData.size()) {
                String grnStat = insertGRN(con, cmpCd, loginDtls.getId().getUsrId(), loginDtls.getOffMst().getId().getOffCd(), alData, "PO");
                if (grnStat.equalsIgnoreCase("Inserted")) {
                    con.commit();
                    insStat = "Inserted";
                }
                con.setAutoCommit(true);
            }
        } 
      
4. Addition in method : insStock in file PurchaseOrder.java at commit 

  if (iUpd == alData.size()) {
                String grnStat = insertGRN(con, cmpCd, loginDtls.getId().getUsrId(), loginDtls.getOffMst().getId().getOffCd(), alData, "DE");
                if (grnStat.equalsIgnoreCase("inserted")) {
                    con.commit();
                    insStat = "Inserted";
                }
            } else {
                con.rollback();
            }

            con.setAutoCommit(true);
			
			
5. Addition in crmHead.jsp in 'products' section:
      <li class="nav-item ml-5 py-1"><a href="<%=context%>/Crm.do?operation=getGRNReport" class="sidebar-link mb-2"><i class="fa  fa-chevron-right fa-sm mr-2"></i>GRN Report</a></li>  
	  
6. Addition in CrmRequestProcesssor.java		

   private static final String GRN_REPORT = "getGRNReport";
   private static final String SHOW_GRN_REP = "showGRNReport";
   private static final String GRN_REPORT_URL = "/jsp/crm/reports/grnReport.jsp";

	
         case SHOW_GRN_REP:
                    fromDt = (String)request.getParameter("from_date");
                    toDt = (String)request.getParameter("to_date");
                    product_id = (String)request.getParameter("product_id");
                    String entType = (String)request.getParameter("entryType");
                    godown = (String) request.getParameter("s_godown");
                    alData = PurchaseOrder.getGRNInfo(cmpMst.getCmpCd(),usrDetails.getOffMst().getId().getOffCd(),fromDt,toDt,product_id,godown,entType);
                    request.setAttribute("Data", alData);
                    forwardUrl = GRN_REPORT_URL;
                    break;

        
           case GRN_REPORT:
                    ProdList= Product.getProducts(cmpMst.getCmpCd(), "T", "ALL", null, false);
                    godown_types=Office.getAllOfficeHeirarchy(cmpMst.getCmpCd(), usrDetails.getOffMst().getId().getOffCd(),"GD");
                    request.setAttribute("ProdList", ProdList);
                    request.setAttribute("godown_types",godown_types);
                    forwardUrl = REPORT_FORM + "getGRNReport";
                    break;

		
8.Adding grnReport.jsp 	in crm/reports	
9. Addition in crmReports.jsp

													  boolean grnEntryType = false;
													  
														  else if(repType.equalsIgnoreCase("getGRNReport")){
												   ReportTitle = "GRN Report";
												   operation = "Crm.do?operation=showGRNReport";
												   Date = true;
												   grnEntryType = true;
												   Godown = true;
												   ProductList = true;
												 }
	 
	                                            <% if(grnEntryType){ %>
                                                      <label style="margin-top: 5px; margin-bottom: 0px;">GRN Entry Type</label>
                                                    <div>
                                                       <select class="form-control" id="entryType" name="entryType">
                                                            <option value="ALL">All</option>
                                                            <option value="PO">Purchase Order</option>
                                                            <option value="DE">Direct Stock Entry</option>
                                                        </select>
                                                    </div>
                                                    
                                                    <%} %>


10. Addition in stock-entry.jsp page after column 'quantity':

                                                  <div class="col-md-2">
                                                        <label>Document Ref No</label>
                                                        <div>
                                                            <input type="text" class='form-control form-control-sm ' name="s_inv_no" id="s_inv_no" placeholder="Document Reference No*" required>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label>Received On</label>
                                                        <div class="input-group">
                                                            <div>
                                                                <input type="text" class='form-control form-control-sm datepicker' name="s_rect_date" id="s_rect_date" placeholder="Received Date" required>                                        
                                                            </div>
                                                        </div>
                                                    </div>

11. Creating grn_mst and grn_Dtls tables:

  CREATE TABLE [dbo].[GRN_MST](
	[CMP_CD] [varchar](10) NOT NULL,
	[ULOGIN_ID] [varchar](30) NOT NULL,
	[OFF_CD] [varchar](10) NOT NULL,
	[SYS_DATETIME] [datetime] NOT NULL,
	[GRN_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[GRN_NO] [varchar](30) NOT NULL,
	[PO_NO] [varchar](30) NULL,
	[PO_DATE] [datetime] NULL,
	[REMARKS] [varchar](500) NULL,
	[GRN_DATE] [datetime] NULL,
	[INV_NO] [varchar](50) NULL,
	[RECD_GODOWN] [varchar](50) NULL,
	[ENT_FR] [varchar](2) NOT NULL,
 CONSTRAINT [PK__GRN_MST__179047122F4C2FFF] PRIMARY KEY CLUSTERED 
(
	[CMP_CD] ASC,
	[GRN_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[GRN_MST] ADD  CONSTRAINT [DF_GRN_MST_SYS_DATETIME]  DEFAULT (getdate()) FOR [SYS_DATETIME]
GO



CREATE TABLE [dbo].[GRN_DTLS](
	[CMP_CD] [varchar](10) NOT NULL,
	[ULOGIN_ID] [varchar](30) NOT NULL,
	[OFF_CD] [varchar](10) NOT NULL,
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[GRN_ID] [bigint] NOT NULL,
	[SYS_DATETIME] [datetime] NOT NULL,
	[PR_ID] [bigint] NULL,
	[QTY_RECV] [numeric](6, 0) NULL,
	[REMARKS] [varchar](500) NULL,
 CONSTRAINT [PK__GRN_DTLS__FE7DCF68AF820F10] PRIMARY KEY CLUSTERED 
(
	[CMP_CD] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[GRN_DTLS] ADD  CONSTRAINT [DF_GRN_DTLS_SYS_DATETIME]  DEFAULT (getdate()) FOR [SYS_DATETIME]
GO


	  